#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/*-------------------------------------------------------
* combos
-------------------------------------------------------*/
/ {
    combos {
        compatible = "zmk,combos";

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
            layers = <0>;
        };

        MiddleClick {
            bindings = <&mkp MCLK>;
            key-positions = <28 37>;
        };

        RightClick {
            bindings = <&mkp RCLK>;
            key-positions = <16 37>;
        };

        RightParen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <20 21>;
            layers = <3>;
        };

        RightBracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <21 22>;
            layers = <3>;
        };

        RightBrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <8 9>;
            layers = <3>;
        };

        RightGreaterThan {
            bindings = <&kp GREATER_THAN>;
            key-positions = <32 33>;
            layers = <3>;
        };

        BASE_or_EXTRAS {
            bindings = <&td_bore>;
            key-positions = <38 39>;
        };

        // GameLayer {
        //     bindings = <&tog 4>;
        //     key-positions = <8 9>;
        // };
        // PhotoLayer {
        //     bindings = <&tog 5>;
        //     key-positions = <2 3>;
        // };
    };
};

/*-------------------------------------------------------
* macros
-------------------------------------------------------*/

/ {
    macros {
        // 前のコマンドをsudoで実行: "sudo !!" + Enter
        sudo: sudo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <20>;
            bindings =
                <&macro_tap>,
                <&kp S &kp U &kp D &kp O>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp EXCL &kp EXCL>,
                <&macro_tap>,
                <&kp RET>;
        };

        // 貼り付け(Cmd+V)
        clip_hist: clip_hist {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LGUI>;
        };

        // 新しいディレクトリ作成 (Ctrl+Shift+N)
        new_dir: new_dir {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp N>,
                <&macro_release>,
                <&kp LCTRL &kp LSHFT>;
        };

        // バッククォート入力補助: `` + 左矢印（Markdownコードブロック用）
        grave_macro: grave_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_tap>,
                <&kp GRAVE>,
                <&macro_tap>,
                <&kp LEFT_ARROW>;
        };

        // スペース付きハイフン: " - "（リスト記号、演算子用）
        minus_macro: minus_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp MINUS>,
                <&macro_tap>,
                <&kp SPACE>;
        };

        // スペース付きイコール: " = "（代入演算子用）
        equals_macro: equals_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp SPACE>;
        };

        // ホームディレクトリパス: "~/"（ファイルパス入力用）
        home_macro: home_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp TILDE>, <&macro_tap>, <&kp FSLH>;
        };
    };
};

/*-------------------------------------------------------
* behaviors
-------------------------------------------------------*/
#define TAP_DANCE_2(name, single_tap, double_tap) \
    name: tap_dance { \
        compatible = "zmk,behavior-tap-dance"; \
        label = #name; \
        #binding-cells = <0>; \
        bindings = <single_tap>, <double_tap>; \
    };

#define LAYER_TOGGLE(name, layer) \
    name: layer_toggle { \
        compatible = "zmk,behavior-hold-tap"; \
        #binding-cells = <0>; \
        tapping-term-ms = <150>; \
        flavor = "balanced"; \
        bindings = <&to layer>, <&mo layer>; \
    };
/ {
    behaviors {
        // ホームローモッド（基本）: キーを押し続けると修飾キー、タップすると通常キー
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred"; // 
            tapping-term-ms = <135>; // この時間以上押し続けると修飾キーとして動作
            quick-tap-ms = <150>; // この時間内に再度タップすると常に通常キーとして動作
            require-prior-idle-ms = <185>; // 前のキーからこの時間以上経過している必要がある
            bindings = <&kp>, <&kp>;

            // hold, tap
        };

        // 右側ホームローモッド: 右側のキーに特化した設定
        // hm_right: homerow_mod_right {
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "tap-preferred";
        //     tapping-term-ms = <130>;
        //     // quick-tap-ms = <200>;
        //     // require-prior-idle-ms = <150>;
        //     bindings = <&kp>, <&kp>;
        //     hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        // };

        // 左側ホームローモッド: 左側のキーに特化した設定
        // hm_left: homerow_mod_left {
        //     compatible = "zmk,behavior-hold-tap";
        //     #binding-cells = <2>;
        //     flavor = "tap-preferred";
        //     tapping-term-ms = <130>;
        //     // quick-tap-ms = <200>;
        //     // require-prior-idle-ms = <150>;
        //     bindings = <&kp>, <&kp>;
        //     hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40>;
        // };

        // 2レイヤー切り替え: ホールドでモーメンタリ、タップでトグル
        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
        };

        // スクロール/カーソル切り替え: タップでESC、ホールドでレイヤー9
        // td_cursor: td_scroll_or_cursor {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <100>;
        //     bindings = <&mo 9>, <&mo 8>;
        //     // hold, tap, double_tap
        // };

        // // スペースキー拡張: タップでスペース、ホールドでレイヤー2
        // td_space: td_space {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <85>;
        //     bindings = <&lt 2 SPACE>, <&kp SPACE>;
        //     // hold, tap, double_tap
        // };

        // // バックスペース拡張: タップでバックスペース、ホールドでレイヤー1
        // td_bs: td_bs {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <85>;
        //     bindings = <&lt 1 BACKSPACE>, <&kp BACKSPACE>;
        //     // hold, tap, double_tap
        // };

        // レイヤー切り替え: タップでレイヤー0、ダブルタップでレイヤー5、トリプルタップでレイヤー4
        // td_layers: td_layer_swap {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     bindings = <&to 0>, <&to 5>, <&to 4>;
        //     // tap, double_tap, tripple_tap
        // };

        // クリック/スクロール切り替え: タップで右クリック、ホールドでレイヤー9
        // td_clk_scrl: td_click_or_scroll {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <250>;
        //     bindings = <&mkp RCLK>, <&mo 9>;
        //     // tap/hold, double_tap
        // };

        // ベース/エクストラ切り替え: タップでレイヤー6、ダブルタップでレイヤー0
        td_bore: BASE_or_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 6>, <&to 0>;
        };

        /*-------------------------------------------------------
        * 記号入力補助 
        -------------------------------------------------------*/
        TAP_DANCE_2(tb_grave,  &kp GRAVE, &grave_macro); // バッククォート拡張: タップでバッククォート、ダブルタップでマクロ
        TAP_DANCE_2(tb_hyphen, &kp MINUS, &minus_macro); // ハイフン拡張: タップでハイフン、ダブルタップでスペース付きハイフン
        TAP_DANCE_2(tb_equals, &kp EQUAL, &equals_macro); // イコール拡張: タップでイコール、ダブルタップでスペース付きイコール
        TAP_DANCE_2(tb_home,   &kp FSLH,  &home_macro); // スラッシュ拡張: タップでスラッシュ、ダブルタップでホームディレクトリパス

        // // バッククォート拡張: タップでバッククォート、ダブルタップでマクロ
        // td_grave: DoubleTap_Grave {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     bindings = <&kp GRAVE>, <&grave_macro>;
        // };

        // // ハイフン拡張: タップでハイフン、ダブルタップでスペース付きハイフン
        // td_hyphen: DoubleTap_Hyphen {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     bindings = <&kp MINUS>, <&minus_macro>;
        // };

        // // イコール拡張: タップでイコール、ダブルタップでスペース付きイコール
        // td_equals: DoubleTap_Equals {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     bindings = <&kp EQUAL>, <&equals_macro>;
        // };

        // // スラッシュ拡張: タップでスラッシュ、ダブルタップでホームディレクトリパス
        // td_home: DoubleTap_Home {
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     bindings = <&kp FSLH>, <&home_macro>;
        // };

        /*-------------------------------------------------------
        * tap-dance
        -------------------------------------------------------*/
        TAP_DANCE_2(jp_alt4,    &hm LEFT_ALT LANG1, &httl 4 4); // 英語GUI2
        TAP_DANCE_2(en_gui2,    &hm LEFT_GUI LANG2, &httl 2 2); // 英語GUI2

        TAP_DANCE_2(space_num,  &lt 1 SPACE, &lt_num); // スペース1
        TAP_DANCE_2(esc_base,   &lt 6 ESC,   &lt_base); // ESC
        TAP_DANCE_2(slh_cursor, &lt 7 FSLH,  &lt_mouse); // 

    };
};

/*-------------------------------------------------------
* input config
-------------------------------------------------------*/

/ {
    /* マウスの速度設定 Layer 0, 2, 7 */
    trackball_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <0 2 7>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        // マウスの速度設定 multiplier/divisor
        // scale-multiplier = <4>;
        scale-multiplier = <3>;
        scale-divisor = <6>;
    };

    /* マウスを遅くするモード Layer 8 */
    trackball_snipe_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <8>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        // マウスの速度設定 multiplier/divisor
        scale-multiplier = <1>;
        scale-divisor = <6>;
    };

    /* マウス 縦スクロールモード Layer 9 */
    trackball_scroll_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&vtrackball>;
        layers = <9>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;
        // y-invert; // 縦スクロールの方向を反転
        // bindings = <&ib_wheel_scaler 1 14>;
        bindings = <&ib_wheel_scaler 1 64>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */
    /* マウススクロールモード */
    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };

    /* adjust cooldown waiting period for mouse key layer after activated */
    /* マウスキーのレイヤー切り替え */
    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <750>;
    };

    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE      0
    // #define NUM       1
    // #define FUNCTION  2
    // #define SYM       3
    // #define WORKSPACE 4
    // #define MEDIA     5
    // #define EXTRAS    6
    // #define MOUSE     7
    // #define SLOW      8
    // #define SCROLL    9

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&esc_base                   &kp Q    &lt 7 W  &kp E     &kp R       &kp T       &kp Y         &kp U            &kp I      &kp O       &kp P          &kp MINUS
&hm LCTRL TAB               &kp A    &lt 4 S  &lt 5 D   &lt 6 F     &kp G       &kp H         &kp J            &kp K      &kp L       &kp SEMICOLON  &kp APOSTROPHE
&hm LEFT_SHIFT C_AC_SEARCH  &lt 0 Z  &lt 1 X  &lt 2 C   &lt 3 V     &kp B       &kp N         &kp M            &kp COMMA  &kp PERIOD  &slash_cursor   &kp GRAVE
                                              &jp_alt4  &space_num  &en_gui2    &lt 3 BACKSPACE &lt 5 ENTER 
            >;
        };

        NUM {
            bindings = <
&trans  &none  &none  &none   &none          &none        &kp ASTRK    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS   &kp ASTRK
&trans  &none  &none  &none   &none          &none        &kp MINUS    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp SLASH
&none   &none  &none  &none   &kp BACKSPACE  &kp SPACE    &kp NUMBER_0 &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &td_equals
                      &trans  &trans         &trans       &trans     &trans
            >;
        };

        FUNCTION {
            bindings = <
&none   &none   &kp HOME  &kp UP_ARROW    &kp END    &none     &none   &kp F7  &kp F8  &kp F9  &kp F10  &none
&trans  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none     &none   &kp F4  &kp F5  &kp F6  &kp F11  &none
&none   &none   &none     &none           &none      &none     &none   &kp F1  &kp F2  &kp F3  &kp F12  &none
                          &none           &none      &trans    &trans  &trans
            >;
        };

        SYM {
            bindings = <
&none  &none  &none  &none   &none   &none     &none       &kp AMPS    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&none  &none  &none  &none   &trans  &none     &td_hyphen  &kp DOLLAR  &kp PERCENT   &kp CARET             &kp LEFT_BRACKET       &kp RIGHT_BRACKET
&none  &none  &none  &none   &none   &none     &none       &kp EXCL    &kp AT        &kp HASH              &kp BACKSLASH          &kp BSLH
                     &trans  &trans  &trans    &trans      &trans
            >;
        };

        WORKSPACE {
            bindings = <
&trans  &none  &none         &kp LC(UP)    &none          &none     &none  &none         &kp RC(UP)    &none          &none  &none
&trans  &none  &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(RIGHT)  &none     &none  &kp RC(LEFT)  &kp RC(DOWN)  &kp RC(RIGHT)  &none  &none
&trans  &none  &none         &none         &none          &none     &none  &none         &none         &none          &none  &none
                             &trans        &trans         &trans    &none  &none
            >;
        };

        MEDIA {
            bindings = <
&trans          &kp LA(LC(LS(Z)))  &kp LA(LC(LS(E)))  &kp LA(LC(LS(A)))  &kp LA(LC(LS(S)))  &kp LA(LC(LS(B)))    &kp C_BRIGHTNESS_INC  &none     &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_STOP         &kp C_NEXT
&kp LC(LA(E))   &kp LEFT           &kp DOWN           &kp UP             &kp RIGHT          &kp LCTRL            &kp C_BRIGHTNESS_DEC  &none     &kp UP_ARROW    &kp K_MUTE        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&kp LS(DELETE)  &kp LA(LS(A))      &kp LA(KP_N1)      &kp LA(KP_N2)      &kp LA(KP_N3)      &none                &none                 &kp LEFT  &kp DOWN        &kp RIGHT         &none              &none
                                                      &trans             &trans             &trans               &trans                &trans
            >;
        };

        EXTRAS {
            bindings = <
&kp C_POWER      &none  &none  &none  &out OUT_BLE  &out OUT_USB    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG  &bt BT_CLR
&kp C_SLEEP      &sudo  &none  &none  &none         &none           &none         &none         &none         &none         &none         &none
&kp C_AL_COFFEE  &none  &none  &none  &none         &bootloader     &bootloader   &none         &none         &none         &none         &studio_unlock
                               &none  &none         &none           &none         &none
            >;
        };

        MOUSE {
            bindings = <
&trans  &msc MOVE_LEFT  &msc MOVE_UP    &mmv MOVE_UP    &msc MOVE_DOWN   &msc MOVE_RIGHT    &none   &kp HOME   &kp UP     &kp END     &none  &none
&trans  &mkp MB4        &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5           &none   &kp LEFT   &kp DOWN   &kp RIGHT   &none  &none
&trans  &kp C_AC_UNDO   &kp C_AC_CUT    &kp C_AC_COPY   &kp C_AC_PASTE   &mkp MCLK          &none   &mkp LCLK  &mkp RCLK  &td_cursor  &none  &none
                                        &trans          &trans           &trans             &trans  &trans
            >;
        };

        SLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
